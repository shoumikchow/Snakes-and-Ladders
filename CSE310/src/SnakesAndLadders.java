/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Shoumik
 */
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Random;
import javax.imageio.ImageIO;

public class SnakesAndLadders extends javax.swing.JFrame {
static SnakesAndLadders sd;
static int x=0;

    /**
     * Creates new form SnakesAndLadders
     */
    public SnakesAndLadders() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardLabel = new javax.swing.JPanel();
        rollButton = new javax.swing.JButton();
        diceShowsLabel = new javax.swing.JLabel();
        turnOfLabel = new javax.swing.JLabel();
        turnOf = new javax.swing.JTextField();
        playerTwoScore = new javax.swing.JTextField();
        playerOneScore = new javax.swing.JTextField();
        diceShows = new javax.swing.JTextField();
        p1Label = new javax.swing.JLabel();
        p2Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout boardLabelLayout = new javax.swing.GroupLayout(boardLabel);
        boardLabel.setLayout(boardLabelLayout);
        boardLabelLayout.setHorizontalGroup(
            boardLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        boardLabelLayout.setVerticalGroup(
            boardLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        rollButton.setText("Roll the Dice!");
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        diceShowsLabel.setText("Dice Shows:");

        turnOfLabel.setText("Turn of:");

        turnOf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnOfActionPerformed(evt);
            }
        });

        playerTwoScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerTwoScoreActionPerformed(evt);
            }
        });

        playerOneScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerOneScoreActionPerformed(evt);
            }
        });

        p1Label.setText("Player 1");

        p2Label.setText("Player 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(boardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(turnOfLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(playerOneScore, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(playerTwoScore, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(diceShowsLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(diceShows)
                                    .addComponent(turnOf, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(p1Label)
                                .addGap(103, 103, 103)
                                .addComponent(p2Label)))
                        .addContainerGap(85, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(diceShowsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diceShows, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(turnOfLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(turnOf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1Label)
                    .addComponent(p2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerOneScore, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerTwoScore, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(boardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

public static int rolledNumber=0;    
public static String p1String="Player 1";
public static String p2String="Player 2";
public static boolean flip=false;
public static int flag1=0;
public static int flag2=0;
public static BufferedImage img;


Player p1 = new Player();
Player p2 = new Player();

 public int roll(){
        Random rnd=new Random();
        
        rolledNumber=0;
        
    while (rolledNumber==0){
        rolledNumber=Math.abs(rnd.nextInt() % 7);
    }
    return rolledNumber;
    }
 

 public void turn(){
        if(flip==false){
            turnOf.setText(p1String);
            }
        else{
            turnOf.setText(p2String);
        }
    }
 
 public void toggle(){
    flip=!flip;
    }
     
    
    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        roll();
        toggle();
        turn();
        diceShows.setText(String.valueOf(rolledNumber));
        
        
        String turnNowShows=turnOf.getText();
        
        //P1 SCORE
        if (turnNowShows.equals("Player 1")){
        if (p1.score==0 && rolledNumber==1){
            flag1=99;
        }
        
        if (rolledNumber<=6 && flag1==99  && (p1.score+rolledNumber)<=100){
         p1.score=p1.score+rolledNumber;
         
         p1.LadderOrSnake(p1.score);
         
        }
        playerOneScore.setText(String.valueOf(p1.score));
        
        String s=playerOneScore.getText();
        if (s.equals("100")){
            playerOneScore.setText(s+"! Player One Wins!");
        }
        }
        //P2 SCORE
        else{
            if (p2.score==0 && rolledNumber==1){
                flag2=99;
            }
            if (rolledNumber<=6 && flag2==99 && (p2.score+rolledNumber)<=100){
         p2.score=p2.score+rolledNumber;
         
         p2.LadderOrSnake(p2.score);
         
        }
            playerTwoScore.setText(String.valueOf(p2.score));
            
             String s=playerTwoScore.getText();
        if (s.equals("100")){
            playerTwoScore.setText(s+"! Player Two Wins!");
        }
        }
    }//GEN-LAST:event_rollButtonActionPerformed

        
    private void turnOfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnOfActionPerformed
                
    }//GEN-LAST:event_turnOfActionPerformed

    private void playerOneScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerOneScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerOneScoreActionPerformed

    private void playerTwoScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerTwoScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerTwoScoreActionPerformed

    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SnakesAndLadders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SnakesAndLadders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SnakesAndLadders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SnakesAndLadders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
           
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if(x==0) sd = new SnakesAndLadders();
                x=1;
                
                
                try{
        img=ImageIO.read(new File("lib/rsz_board.jpg"));
      }catch (Exception e){
          System.out.println("Board not found");
      }         
                
                sd.setVisible(true);
                
            }
        });
    }
    
    public void paint(Graphics g){
        g.drawImage(img,0,0,null);
    }
        
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardLabel;
    private javax.swing.JTextField diceShows;
    private javax.swing.JLabel diceShowsLabel;
    private javax.swing.JLabel p1Label;
    private javax.swing.JLabel p2Label;
    private javax.swing.JTextField playerOneScore;
    private javax.swing.JTextField playerTwoScore;
    private javax.swing.JButton rollButton;
    private javax.swing.JTextField turnOf;
    private javax.swing.JLabel turnOfLabel;
    // End of variables declaration//GEN-END:variables
}
